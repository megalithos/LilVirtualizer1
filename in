[data]
str1 = "Welcome 2\n"
str2 = "Please enter password: "
wrong_password_str = "Wrong password :("
correct_password_str = "Correct password, you did it!"
secretLength = 94
junk1 = 0x93 0xce 0x6f 0x66 0x8f 0x4a 0xd9 0x9d 0x2b 0xd3 0xb4 0xd3 0x34 0x22 0xc6 0xb7 0x94 0xf8 0x9e 0x4c 0x30 0x62 0xd7 0xf2 0x35 0x86 0xa8 0x1c 0x32 0x34 0x1c 0x39 0xb8 0x14 0xb2 0xc7 0xc2 0xcf 0x31 0xf3 0xab 0xaf 0xf4 0xfb 0xd6 0x3f 0x42 0x19 0x5d 0x4a 0x49 0x2f 0xf6 0xf9 0x42 0x32 0xd9 0xc3 0x34 0x9d 0xb4 0xb0 0x20 0x13 0xc4 0xd7 0x1c 0x4f 0x22 0xa4 0xab 0xbe 0x3c 0xe1 0xac 0x6d 0x7f 0x94 0x7f 0xe0 0x7b 0xac 0x39 0x64 0x66 0x10 0x3d 0x9b 0x8e 0xa6
junk2 = 0xda 0x31 0xeb 0x58 0xc0 0x09 0x43 0x9c 0xe5 0xfd 0x33 0x9d 0xb9 0x5d 0x65 0xdf 0x94 0xaf 0x66 0x99 0xb6 0x04 0xae 0xdd 0x3e 0x7f 0xf7 0x13 0x34 0x73 0x23 0x57 0xd0 0xe9 0xb1 0x10 0xfb 0x0f 0xbc 0x38 0xfd 0xb3 0xd9 0xbd 0xa9 0x0e 0x03 0x12 0xc9 0x5e 0x7f 0xc2 0x5a 0xc3 0xb2 0xe6 0x3c 0x8a 0x82 0xf9 0x7a 0x04 0xe7 0xbf 0x76 0xb6 0x27 0x5a 0x3d 0x87 0x8d 0x33 0xac 0x99 0xf5 0xe5 0x38 0x00 0xf6 0xd1 0x9e 0x59 0x56 0x72 0xb5 0x7a 0xb0 0x38 0xb3 0x90 0xf9 0x20 0x63 0xc7 0x47 0xb8 0xa4 0x44 0xef 0x68 0xc2 0x02 0x0c 0xe5 0xcb
secret = 0x3a 0x15 0x2c 0xa 0x1c 0x6 0x2c 0x15 0x1a 0x14 0x6 0x1 0x16 0x17 0x2c 0x1c 0x6 0x7 0x2c 0x7 0x1b 0x16 0x2c 0x18 0x16 0xa 0x2c 0x11 0xa 0x2c 0xa 0x1c 0x6 0x1 0x0 0x16 0x1f 0x15 0x2c 0xa 0x1c 0x6 0x2c 0x1b 0x12 0x5 0x16 0x2c 0x0 0x1c 0x1e 0x16 0x2c 0x0 0x16 0x1 0x1a 0x1c 0x6 0x0 0x2c 0x1 0x16 0x5 0x16 0x1 0x0 0x1a 0x1d 0x14 0x2c 0x0 0x18 0x1a 0x1f 0x1f 0x0 0x52 0x42 0x17 0x37 0x15 0x39 0x16 0x21 0x1f 0x46 0x15 0x50 0x5d 0x40 0x47 0x5a 0x52
junk3 = 0x64 0x27 0x39 0x8b 0x3b 0xf1 0xbe 0x7a 0x1d 0xbd 0x15 0x70 0x51 0x30 0x0c 0xd2 0x42 0x5f 0x09 0x1c 0x76 0xcc 0xf1 0xa3 0xb6 0xf9 0x4a 0x2c 0x2a 0xca 0x75 0x8d 0xbc 0xe9 0x7f 0x26 0x5e 0xbc 0xbf 0x54 0x6a 0xbe 0x2a 0xcd 0x25 0x99 0xb7 0x74 0xc6 0x11 0x00 0xd2 0x3b 0xe3 0x89 0xcc 0x1a 0x4f 0xaf 0x75 0x3c 0x84 0x02 0xfd 0xa2 0xfe 0x20 0x6d 0xa9 0x24 0xbc 0x65 0x9f 0x23 0x81 0x04 0x6f 0xaf 0x37 0x3f 0xe6 0x07 0xe2 0xde 0x5d 0x7b 0xd9 0xdc 0xa5 0xe1 0x88 0xe3 0x60 0xb2 0x36 0x4d 0x0e

msvcrt_lib_str = "msvcrt.dll"
msvcrt_lib = 0

printf_fn_str = "printf"
printf_fn = 0

scanf_fn_str = "scanf"
scanf_fn = 0
prompt_password_format_str = "%94s"
input_buffer = (94)

getchar_fn_str = "getchar"
getchar_fn = 0

kernel32_lib_str = "kernel32.dll"
kernel32_lib = 0

isDebuggerPresent_str = "IsDebuggerPresent"
IsDebuggerPresent_fn = 0

[code]
load %r0, msvcrt_lib_str
load %r1, msvcrt_lib
loadlibrary

load %r0, printf_fn_str
load %r1, printf_fn
load %r2, msvcrt_lib // fromlib
loadfunction

load %r0, scanf_fn_str
load %r1, scanf_fn
load %r2, msvcrt_lib
loadfunction

load %r0, getchar_fn_str
load %r1, getchar_fn
load %r2, msvcrt_lib
loadfunction

load %r0, kernel32_lib_str
load %r1, kernel32_lib
loadlibrary

load %r0, isDebuggerPresent_str
load %r1, IsDebuggerPresent_fn
load %r2, kernel32_lib
loadfunction

load %r0, str1
callfunction printf_fn, 1

startProgram:


load %r0, str2
callfunction printf_fn, 1

load %r0, prompt_password_format_str
load %r1, input_buffer
callfunction scanf_fn, 2

// xor the whole input
load %r0, input_buffer // pInputBuffer
load %r1, 0x73 // xor key
load %r2, 0 // counter
load %r3, 1 // for incrementing
load %r4, secretLength // maxCount
load %r5, 0 // temp

startLoop:

load %r5, [%r0] // load current char into temp variable
xor %r5, %r1 // xor the character
load [%r0], %r5 // move back to inputBuffer

add %r0, %r3 // pInputBuffer++;
add %r2, %r3 // counter++;

cmp %r2, %r4
jb startLoop

// password check
load %r0, input_buffer
load %r1, secret
load %r2, 1
load %r3, [secretLength] // load maxCount
load %r4, 1 // counter
load %r5, 0
load %r6, 0
load %r7, 0x000000FF // mask
load %r8, 8

passwordCheckLoop:
load %r5, [%r0]
and %r5, %r7
load %r6, [%r1]
and %r6, %r7
cmp %r5, %r6 // byte compare
jne wrongPassword // jump on mismatch
add %r0, %r2  // increment character pointer
add %r1, %r8 // increment character pointer by 8 cuz it is stored so each character takes 8 bytes
add %r4, %r2            // counter++;
cmp %r4, %r3
jb passwordCheckLoop    // jump if counter < secretLength

load %r0, correct_password_str
callfunction printf_fn, 1



jmp end

wrongPassword:
load %r0, wrong_password_str
callfunction printf_fn, 1

end:
callfunction getchar_fn, 0
end2:
halt